#! /bin/bash
#
### BEGIN INIT INFO
# Provides:          tomcat-xxx
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop tomcat-xxx server
### END INIT INFO

NAME=tomcat-xxx
DESC=tomcat-xxx
TOMCAT_USER=tomcat-xxx
TOMCAT_SHUTDOWN_PORT=8005
WAIT_TOMCAT_STARTED_TIMEOUT=120
WAIT_TOMCAT_STOPPED_TIMEOUT=2
KILLING_TOMCAT_RETRY=10

TOMCAT_HOME=/home/xxx/tomcat
DAEMON=$TOMCAT_HOME/bin/startup.sh
SHUTDOWN=$TOMCAT_HOME/bin/shutdown.sh
PIDFILE=$TOMCAT_HOME/temp/$NAME.pid

export CATALINA_PID=$PIDFILE
#export JAVA_OPTS=-XX:MaxPermSize=256m

wait_tomcat_started() {
    timeout=$WAIT_TOMCAT_STARTED_TIMEOUT
    sleep 4
    pid=`cat $PIDFILE`
    for c in `seq 1 $timeout`; do
	if lsof -t -a -p $pid -iTCP:$TOMCAT_SHUTDOWN_PORT >/dev/null; then
	    sleep 4
	    echo "tomcat has started on port $TOMCAT_SHUTDOWN_PORT (pid:$pid)"
	    return
	elif lsof -t -p $pid >/dev/null; then
	    sleep 1
	else
	    echo "tomcat failed to start"
	    exit 1
	fi
    done
    echo "timeout waiting for tomcat to start on port $TOMCAT_SHUTDOWN_PORT"
    exit 1
}

is_stopped() {
    start-stop-daemon --test --quiet --start --pidfile "$PIDFILE" --user $TOMCAT_USER --startas "$DAEMON" "$@"
}

is_running() {
    start-stop-daemon --test --quiet --stop --pidfile "$PIDFILE" --user $TOMCAT_USER --startas "$DAEMON" "$@"
}


wait_tomcat_stopped() {
    timeout=$1
    for c in `seq 1 $timeout`; do
	sleep 1
	if is_stopped; then
	    return
	fi
	echo "waiting for $DESC to stop"
    done
}

case "$1" in
  start)
	if is_stopped; then
    	    echo "Starting $DESC."
            /bin/su $TOMCAT_USER "$DAEMON"
	    echo "Waiting for $DESC to be fully started."
	    wait_tomcat_started
            echo "$DESC successfully started"
	else
	    echo -n "Starting $DESC: "
            echo "(already running)."
	fi
	;;

  stop)
	if is_running; then
	    echo -ne "Stopping $DESC.\n"
	    /bin/su $TOMCAT_USER $SHUTDOWN

	    wait_tomcat_stopped "$WAIT_TOMCAT_STOPPED_TIMEOUT"

	    if is_running; then
                # Fallback to kill the JVM process in case stopping did not work
		echo "killing $DESC:"
		start-stop-daemon --retry $KILLING_TOMCAT_RETRY --stop --oknodo --pidfile "$PIDFILE" --user "$TOMCAT_USER" || exit 1
		if is_running; then
		    echo "tomcat is still running after killing it for $KILLING_TOMCAT_RETRY seconds, giving up"
		    exit 1
		fi
	    else
		echo "ok"
	    fi
	    rm -f "$PIDFILE"
	else
	    echo -n "Stopping $DESC: "
            echo "(not running)."
	fi
    ;;

  restart|force-reload)
	$0 stop
	sleep 1
	$0 start
	;;

  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|restart}"
    exit 1
    ;;
esac

exit 0
